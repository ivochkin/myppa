#!/usr/bin/env sh
# vi:syntax=sh

if which myppa > /dev/null; then
  myppa "$@"
  exit $?
fi

setup_vars() {
  cd $(dirname $0) > /dev/null
  root=$(pwd -P)
  cd - >/dev/null
  cache=$root/cache
}

venv_myppa() {
  ( . $cache/venv/bin/activate && myppa "$@" )
}

spin() {
  local spinstr='|/-\'
  while read -r line
  do
    local temp=${spinstr#?}
    printf "%c\b" "$spinstr"
    local spinstr=$temp${spinstr%"$temp"}
    echo $line >> $1
  done
}

setup_vars

if [ -f $cache/venv/bin/myppa ]; then
  venv_myppa "$@"
  exit $?
fi

cat <<EOT
MyPPA command-line tool "myppa" is missing on your system.
You can install it manually according to the guide at

  https://github.com/ivochkin/myppa-tool

Or, we can download and install everything needed for
myppa into the "cache" directory.

EOT

read -p "Setup myppa-tool? (no root is required) [y/N]" yesno
echo $yesno
if echo $yesno | grep -Eqv '(yes|y|YES|Y|Yes)'; then
  exit 1
fi

cd $cache
echo Downloading Python 3.5.2 ...
wget -c https://www.python.org/ftp/python/3.5.2/Python-3.5.2.tgz > $cache/install.log
echo -n "Extracting sources ... "
tar xzvf Python-3.5.2.tgz 2>&1 | spin $cache/install.log
echo done
echo -n "Configuring Python 3.5.2 ... "
cd Python-3.5.2
./configure --enable-shared --prefix=$cache LDFLAGS="-Wl,--rpath=$cache/lib" 2>&1 | spin $cache/install.log
echo done
echo -n "Building Python 3.5.2 ... "
make -j 2>&1 | spin $cache/install.log
echo done
echo -n "Installing Python 3.5.2 into '$cache' ... "
make altinstall 2>&1 | spin $cache/install.log
echo done
echo "Setting up virtualenv at $cache/venv ... "
$cache/bin/pip3.5 install pip setuptools --upgrade
$cache/bin/pip3.5 install virtualenv
$cache/bin/virtualenv -p $cache/bin/python3.5 $cache/venv
( . $cache/venv/bin/activate && pip install pip --upgrade )
( . $cache/venv/bin/activate && pip install myppa )

cat <<EOT
Installation completed. Will run now the requested command
  $0 $@
EOT

venv_myppa "$@"
